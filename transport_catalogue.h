#pragma once

#include "input_reader.h"
#include "stat_reader.h"
#include "geo.h"
#include <deque>
#include <unordered_map>
#include <string_view>
#include <algorithm>
#include <string>
#include <vector>

class TransportCatalogue {
public:
    //????????? ??? ?????? ???????????
    struct BusInformation {
        std::string_view name;
        int stops_on_route;
        int unique_stops;
        double route_lenght;
    };
    
    void AddBusAndStop(const Data& data);
    std::vector<BusInformation> GetBusRoute(const std::vector<std::string>& query);

private:
    //????????? ????? ????? ????????? ?????????? - ????????? ???????? ??? ???????? WIFI ?? ??????????
    struct  StopBus {
        std::string name_;
        double  x;
        double  y;
    };
    //??? ???????? ? ??? ??????? ??? ????????? ?????????
    struct Bus {
        std::string name_;
        std::vector<StopBus *> stops_;
    };
    //???????? ????????? ? ?????????
    std::deque<Bus> buses_;
    std::deque<StopBus> stops_;
    //?????? ?? ???????? ???????? ? ??? ????????
    std::unordered_map<std::string_view, Bus *> bus_route_;
    //?????? ?? ???????? ????????? ? ????????? 
    std::unordered_map<std::string_view, std::unordered_set<Bus *>> stop_buses_;
    //?????? ???????? - ?????????? ?? ??? ???????? ?? ??????
    StopBus ParserBusStop(const std::string& text);
    Bus ParserBus(const std::string& text);
    void GetLenRoute(BusInformation& bus);
};
